[target]

# Standard Ubuntu 18.04 server
sandbox.local

# Developer Ubuntu 18.04 server with some extra tools
sandbox.local want_kubernetes=False want_terraform=True want_packer=True want_vagrant=True want_libvirt=True want_ansible=True

# Kubernetes cluster with Docker for ONE CLICK DEMO
k8s.local want_kubernetes_master=True want_flannel=True want_multus=True want_demo=True
k8s-worker1.local want_kubernetes_worker=True want_demo=True
k8s-worker2.local want_kubernetes_worker=True want_demo=True
k8s-worker3.local want_kubernetes_worker=True want_demo=True

# Kubernetes cluster with Docker, Flannel and Multus
k8s.local want_kubernetes_master=True want_calico=True want_multus=False
k8s-worker1.local want_kubernetes_worker=True
k8s-worker2.local want_kubernetes_worker=True
k8s-worker3.local want_kubernetes_worker=True

# Kubernetes cluster with CRI-O, Calico and MetalLB
k8s.local want_kubernetes_master=True want_calico=True want_docker=False want_crio=True want_metallb=True
k8s-worker1.local want_kubernetes_worker=True want_docker=False want_crio=True
k8s-worker2.local want_kubernetes_worker=True want_docker=False want_crio=True
k8s-worker3.local want_kubernetes_worker=True want_docker=False want_crio=True

# Docker registry
registry.local want_registry=True

# VOLTHA operator
voltha.local want_voltha=True

[target:vars]
# Globals
github_user=your_github_username
ansible_user=sysadmin
ansible_password=SetecAstronomy
ansible_become_password=SetecAstronomy
ansible_python_interpreter=/usr/bin/python3

# Tools (change here if you want to apply to any machine)
want_terraform=False
want_packer=False
want_vagrant=False
want_ansible=False
want_libvirt=False

# Docker Container runtime
want_docker=True
want_registry=False

# CRIO Container runtime
want_crio=False

# Networking
want_multinic=False
want_multus=False
want_metallb=False

# VOLTHA
want_voltha=False

# 5G Exotic
want_demo=False

# Kubernetes profiles (these should remain as they are, to be specialized in the host declaration)
want_kubernetes_master=False
want_kubernetes_worker=False
want_calico=False

# Kubernetes 1.18
kubernetes_version='1.18.0'
docker_version='19.03.6-0ubuntu1~18.04.1'

# Kubernetes 1.15
kubernetes_version='1.15.11'
docker_version='18.09.7-0ubuntu1~18.04.4'

# Kubernetes globals
pod_network_cidr='192.168.0.0/16'
metallb_ip_pool='192.168.1.100-192.168.1.110'
apiserver_port_range='30000-64000'
